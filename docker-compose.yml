services:
  database:
    image: "postgres:16-alpine"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    user: 1000:1000
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
    # health check postgres ready
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 5s
      retries: 15
  # This proxy allows us to hit 443 on the host and have it route to port
  # 3000 on the host. This is useful since GitHub OAuth refuses to work as
  # intended on localhost, so we changed the URL to https://tasksapp.local,
  # which we set up in /etc/hosts to point to localhost.
  proxy:
    image: nginx:alpine
    ports:
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./cert:/etc/nginx/certs
    depends_on:
      database:
        condition: service_healthy
    networks:
      - dev
  # app:
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: .
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - .:/app
  #     - /app/node_modules # prevent node_modules from being overridden
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_URL=postgres://user:password@database:5432/postgres
  #   depends_on:
  #     database:
  #       condition: service_healthy

networks:
  dev:
    driver: bridge
